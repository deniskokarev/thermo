- name: sudo step
  become: true
  block:

    - name: make user
      user:
        name: "{{ zephyr_user }}"
        state: present
        createhome: yes
        umask: 022

    - name: enable crb repository for ninja-build
      community.general.dnf_config_manager:
        name: crb
        state: enabled

    - name: install dependencies
      package:
        name: "{{ item }}"
      loop:
        - git
        - cmake
        - dtc
        - wget
        - python3.12
        - python3.12-pip
        - ninja-build
        - epel-release
        - ccache

- name: zephyr user step
  become: true
  become_user: "{{ zephyr_user }}"
  block:

    - name: make home dir readable
      file:
        path: "/home/{{ zephyr_user }}"
        state: directory
        mode: 0755

    - name: make project dir
      file:
        path: "/home/{{ zephyr_user }}/zephyrproject/zephyr"
        state: directory

    - name: github clone
      git:
        repo: https://github.com/zephyrproject-rtos/zephyr.git
        dest: "/home/{{ zephyr_user }}/zephyrproject/zephyr"
        clone: yes
        update: yes
        version: "v{{ zephyr_version }}-branch"
        single_branch: true
      register: zephyr_git_update

    - name: flag if west update required
      file:
        path: "/home/{{ zephyr_user }}/zephyrproject/zephyr_west_update_done"
        state: absent
      when: zephyr_git_update is changed

    - name: python modules
      pip:
        virtualenv: "/home/{{ zephyr_user }}/zephyrproject/.venv"
        virtualenv_command: python3.12 -m venv
        requirements: "/home/{{ zephyr_user }}/zephyrproject/zephyr/scripts/requirements.txt"

    - name: venv shortcut
      template:
        src: zephyr_env.sh.j2
        dest: /home/{{ zephyr_user }}/zephyr_env.sh
        mode: '0644'

    - name: west init
      shell: |
        set -o errexit
        source ~/zephyr_env.sh
        west init -l ~/zephyrproject/zephyr/
      args:
        executable: /bin/bash
        creates: "/home/{{ zephyr_user }}/zephyrproject/.west"

    - name: west update
      shell: |
        set -o errexit
        source ~/zephyr_env.sh
        cd ~/zephyrproject
        west update
        west zephyr-export
        touch /home/{{ zephyr_user }}/zephyrproject/zephyr_west_update_done
      args:
        executable: /bin/bash
        creates: "/home/{{ zephyr_user }}/zephyrproject/zephyr_west_update_done"

    - name: download minimal SDK
      get_url:
        url: "{{ zephyr_sdk_url }}"
        dest: "/home/{{ zephyr_user }}/{{ zephyr_sdk_file }}"
        checksum: "md5:{{ zephyr_sdk_md5}}"
      register: zephyr_sdk_update

    - name: flag if SDK installation required
      file:
        path: "/home/{{ zephyr_user }}/zephyrproject/zephyr_sdk_done"
        state: absent
      when: zephyr_sdk_update is changed

    - name: check SDK installation flag
      stat:
        path: "/home/{{ zephyr_user }}/zephyrproject/zephyr_sdk_done"
      register: zephyr_sdk_update_flag

    - name: install SDK
      block:

      - name: unpack minimal SDK
        unarchive:
          remote_src: yes
          list_files: yes
          src: "/home/{{ zephyr_user }}/{{ zephyr_sdk_file }}"
          dest: "/home/{{ zephyr_user }}"
        register: zephyr_sdk_unpack_files

      - name: SDK registration helper for other users
        template:
          src: zephyr_sdk_setup.sh.j2
          dest: /home/{{ zephyr_user }}/zephyr_sdk_setup.sh
          mode: '0755'

      - name: download and setup SDK
        command:
          argv:
            - /home/{{ zephyr_user }}/zephyr_sdk_setup.sh
            - -t arm-zephyr-eabi
            - -t x86_64-zephyr-elf

      - name: mark SDK installation done
        file:
          path: "/home/{{ zephyr_user }}/zephyrproject/zephyr_sdk_done"
          state: touch

      when: zephyr_sdk_update is changed or not zephyr_sdk_update_flag.stat.exists
